using Nemerle.Collections;
using System.Console;
using System;

/// <summary>
/// Number of discrepancies between two partitions of a set.
/// Similar to <a src="http://en.wikipedia.org/wiki/Rand_index">Rand index</a>.
/// </summary>
def EvaluateClusters(l1, l2)
{
	def CountPairs(n)
	{
		n * (n - 1) / 2
	}
	def GetContingencyTableSum(l1, l2)
	{
		mutable sum = 0;
		foreach (x in l1 with i)
		foreach (y in l2 with j)
			sum += CountPairs(x.Intersect(y).Count);
		sum;
	}
	def GetMarginalSum(l)
	{
		l.Fold(0, (x, sum) => sum + CountPairs(x.Count))
	}

	def l1 = l1.Map(Set);
	def l2 = l2.Map(Set);

	def ab = GetContingencyTableSum(l1, l2);
	def a  = GetMarginalSum(l1);
	def b  = GetMarginalSum(l2);

	(a + b) / 2 - ab;

}

WriteLine(EvaluateClusters([[1, 2], [3]], [[1, 3], [2]]));
