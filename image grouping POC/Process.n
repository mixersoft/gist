// REFERENCE: ComputeGist.dll
// REFERENCE: Emgu.CV.dll
// REFERENCE: Emgu.Util.dll
// PLATFORM: x64

using Emgu.CV.CvEnum;
using Emgu.CV.Structure;
using Emgu.CV;
using Nemerle.Collections;
using System.Console;
using System.IO;

def files = System.Collections.Generic.List();

foreach (dir in Directory.GetDirectories("images"))
	foreach (file in Directory.GetFiles(dir))
		files.Add(file);
foreach (file in files with i)
{
	def image = Image.[Gray, byte](file);

	def descriptor = Gist.Algorithm.GetBwDescriptor
		( image      = image.Resize(128, 128, INTER.CV_INTER_CUBIC)
		, blockCount = 4
		, a          = 8
		, b          = 8
		, c          = 4
		);

	def id  = Path.GetFileNameWithoutExtension(file);
	def dir = Path.GetFileName(Path.GetDirectoryName(file));

	def path = $@"descriptors\$dir\$id.txt";

	_ = Directory.CreateDirectory($@"descriptors\$dir");

	WriteLine($"$i/$(files.Count): $path");
	File.WriteAllText($@"descriptors\$dir\$id.txt", descriptor.ToString("\r\n"));
}
