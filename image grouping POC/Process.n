// REFERENCE: ComputeGist.dll
// REFERENCE: Emgu.CV.dll
// REFERENCE: Emgu.Util.dll
// PLATFORM: x64

using Emgu.CV.CvEnum;
using Emgu.CV.Structure;
using Emgu.CV;
using Nemerle.Collections;
using System.Console;
using System.IO.Directory;
using System.IO.File;
using System.IO.Path;
using System.IO;

foreach (srcDir in GetDirectories("images"))
{
	def dstDir = Combine("descriptors", GetFileName(srcDir));
	unless (Directory.Exists(dstDir))
	{
		WriteLine(dstDir);

		_ = CreateDirectory(dstDir);

		def files = GetFiles(srcDir);
		foreach (srcFile in files with i)
		{
			def descriptor =
				using (image = Image.[Gray, byte](srcFile))
					Gist.Algorithm.GetBwDescriptor(image, 4, 8, 8, 4);

			def id      = GetFileNameWithoutExtension(srcFile);
			def dstFile = Combine(dstDir, id + ".txt");

			WriteLine($"\t$i/$(files.Length) $id");

			WriteAllText(dstFile, descriptor.ToString("\r\n"));
		}
	}
}
