using Emgu.CV.CvEnum;
using Emgu.CV.Structure;
using Emgu.CV;
using Nemerle.Collections;
using Nemerle.Utility;
using Newtonsoft.Json.Linq;
using Profiling;
using System.IO;
using System.Math;
using System.Net;
using System;

using SCG = System.Collections.Generic;

class DownloadData : ITask
{
	private client = WebClient();

	private downloadPrefix : string;

	public this(downloadPrefix : string)
	{
		this.downloadPrefix = downloadPrefix;
	}

	public GetInputs() : list[TaskItem]
	{
		Directory.GetFiles("data").MapToList(path => TaskItem.File(path) : TaskItem)
	}

	public GetOutput(input : TaskItem) : TaskItem
	{
		def file = (input :> TaskItem.File).path;
		TaskItem.Directory(Path.Combine("images", Path.GetFileNameWithoutExtension(file)))
	}

	public Execute(input : TaskItem, output : TaskItem) : void
	{
		def file   = (input  :> TaskItem.File).path;
		def dstDir = (output :> TaskItem.Directory).path;

		_ = Directory.CreateDirectory("images");
		_ = Directory.CreateDirectory(dstDir);

		def data = JObject.Parse(File.ReadAllText(file));

		def castingCall = data["response"]["castingCall"];
		def baseUrl     = "http://dev.snaphappi.com" + castingCall["CastingCall"]["Auditions"]["Baseurl"];
		def photos      = castingCall["CastingCall"]["Auditions"]["Audition"];

		def count = photos.Children().NCount();

		def downloadPrefix = "/" + downloadPrefix;

		foreach (photo in photos.Children() with i)
		{
			def id      = photo["id"];
			def rootSrc = photo["Photo"]["Img"]["Src"]["rootSrc"];
			def image   = baseUrl + rootSrc.ToString().Replace("/", downloadPrefix);

			Console.WriteLine($"\t$i/$count $id");

			client.DownloadFile(image, Path.Combine(dstDir, id + ".jpg"));
		}
	}
}
