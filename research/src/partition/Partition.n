// REFERENCE: Emgu.CV.dll
// REFERENCE: Emgu.Util.dll
// REFERENCE: Newtonsoft.Json.dll

using Emgu.CV.CvEnum;
using Emgu.CV.Structure;
using Emgu.CV;
using Nemerle.Collections;
using Newtonsoft.Json.Linq;
using System.Console;
using System.IO;
using System.Math;

def GetImageData()
{
	def GetData(photo)
	{
		def id   = photo["id"] :> string;
		def time = photo["Photo"]["TS"] :> int;

		def path = $@"descriptors\venice\$id.txt";
		def descriptor = File.ReadAllLines(path).Map(double.Parse);

		(id, time, descriptor);
	}

	def data = JObject.Parse(File.ReadAllText(@"data\venice.json"));

	def castingCall = data["response"]["castingCall"];
	def photos      = castingCall["CastingCall"]["Auditions"]["Audition"];

	photos.Children().Map(GetData).ToArray().Sort((_, time, _) => time);
}

def Distance(v1, v2)
{
	def Square(x) { x * x }
	mutable sum = 0.0;
	for (mutable i = 0; i != v1.Length; ++i)
		sum += Square(v1[i] - v2[i]);
	Sqrt(sum);
}

def WriteHtml(images, path)
{
	WriteLine(images.Length);
	using (writer = File.CreateText(path))
	{
		[ "<html><body>"
		, "<head><style type='text/css'>"
		, "	.even { background-color : #C1B398 }"
		, "	.odd  { background-color : #ACCEC0 }"
		, "	span { display : block; padding : 8px; }"
		, "</style></head>"
		].Iter(writer.WriteLine);

		writer.WriteLine("<body>");

		mutable prevDesc = images[0][2];
		mutable first    = true;
		mutable even     = true;

		def src = $@"images\venice\$(images[0][0]).jpg";
		writer.WriteLine("<span class='even'>");
		writer.WriteLine($"<img height='64' src='$src'>");

		foreach ((id, _, desc) in images)
		{
			if (first)
			{
				first = false;
			}
			else
			{
				when (Distance(desc, prevDesc) > 0.5)
				{
					even = !even;
					def spanClass = if (even) "even" else "odd";
					writer.WriteLine($"</span><span class='$spanClass'>");
				}
			}

			def src = $@"images\venice\$id.jpg";
			writer.WriteLine($"<img height='64' src='$src'>");

			prevDesc = desc;
		}

		writer.WriteLine("</span></body></html>");
	}
}

WriteHtml(GetImageData(), "out.html");
