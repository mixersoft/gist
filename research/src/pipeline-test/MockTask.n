using Nemerle.Collections;
using Nemerle.Utility;

[ Record ]
class MockTask : ITask
{
	[ Accessor ] private name : string;

	private itemMap : list[list[string] * list[string]];
	private items   : list[MockTaskItem];

	public MapItems(_ : list[ITaskItem]) : list[TaskMapping]
	{
		def GetItemsByPath(paths)
		{
			paths.Map(path => items.Find(item => item.Path == path).Value)
		}
		def CreateMapping(i, o)
		{
			def i = GetItemsByPath(i);
			def o = GetItemsByPath(o);
			TaskMapping
				( inputs  = i
				, outputs = o
				, compute = () => Compute(o)
				);
		}
		itemMap.Map(CreateMapping);
	}

	private Compute(outputs : list[ITaskItem]) : void
	{
		foreach (output is MockTaskItem in outputs)
			output.Compute();
	}
}
