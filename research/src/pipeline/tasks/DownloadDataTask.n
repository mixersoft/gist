using Nemerle.Collections;
using Nemerle.Utility;
using PipelineMacro;
using System.IO;
using System.Net;
using System;

class DownloadDataTask : ITask
{
	public MapItems(items : list[ITaskItem]) : list[TaskMapping]
	{
		mutable mappings = [];
		foreach (item is JsonItem in items)
			mappings ::= TaskMapping(this, [ item ], [ ImageCollectionItem(item.Name) ]);
		mappings;
	}

	private Compute
		( [InItem]  jsonItem : JsonItem
		, [OutItem] images   : ImageCollectionItem
		, downloadImagePrefix : string
		) : void
	{
		def downloadPrefix = "/" + downloadImagePrefix;

		def client = WebClient();

		images.ImageIDs = array(jsonItem.Photos.Length);

		_ = Directory.CreateDirectory(Path.GetDirectoryName(images.Path));
		DirectoryEx.Recreate(images.Path);

		def baseUrl = "http://dev.snaphappi.com" + jsonItem.BaseUrl;

		foreach (photo in jsonItem.Photos with i)
		{
			client.DownloadFile
				( address  = baseUrl + photo.RootSrc.Replace("/", downloadPrefix)
				, fileName = images.MakePath(photo.ID)
				);
			images.ImageIDs[i] = photo.ID;
		}
	}
}
