using Emgu.CV.CvEnum;
using Emgu.CV.Structure;
using Emgu.CV;
using Nemerle.Collections;
using Nemerle.Utility;
using PipelineMacro;
using System.IO;
using System.Text;

class CreateDescriptorHtmlTask : ITask
{
	public MapItems(items : list[ITaskItem]) : list[TaskMapping]
	{
		mutable mappings = [];
		foreach (item is DescriptorItem in items)
			mappings ::= TaskMapping(this, [ item ], [ DescriptorHtmlItem(item.Name) ]);
		mappings;
	}

	private Compute
		( [InItem]  descriptors : DescriptorItem
		, [OutItem] html        : DescriptorHtmlItem
		, dominantColorCount : int
		, colorWeight        : double
		) : void
	{
		def GetThumbnailPath(id)
		{
			def folder = Path.GetFileName(descriptors.Path);
			$"../ThumbnailCollection/$folder/$id.jpg"
		}
		def GetDominantColor(data, n)
		{
			def startIndex = data.Length - 3 * dominantColorCount + 3 * n;
			def src = Image.[Bgr, float](1, 1);
			src[0, 0] = Bgr
				( red   = data[startIndex + 0] / colorWeight
				, green = data[startIndex + 1] / colorWeight
				, blue  = data[startIndex + 2] / colorWeight
				);

			def dst = Image.[Bgr, float](1, 1);
			CvInvoke.cvCvtColor(src.Ptr, dst.Ptr, COLOR_CONVERSION.CV_Lab2BGR);

			string.Format
				( "#{0:X2}{1:X2}{2:X2}"
				, dst[0, 0].Red   :> int
				, dst[0, 0].Green :> int
				, dst[0, 0].Blue  :> int
				);
		}

		def text = StringBuilder();
		def Write    (line) { _ = text.Append(line)     }
		def WriteLine(line) { _ = text.AppendLine(line) }

		[ "<html>"
		, "<head><style type='text/css'>"
		, "	tr td              { width: 32px }"
		, "	tr td:nth-child(1) { width: auto; text-align: right }"
		, "</style></head>"
		, "<body><table>"
		].Iter(WriteLine);

		foreach (descriptor in descriptors.Descriptors)
		{
			def thumb = GetThumbnailPath(descriptor.ID);
			Write($"<tr><td><img src='$thumb' /></td>");
			for (mutable i = 0; i != dominantColorCount; ++i)
			{
				def color = GetDominantColor(descriptor.Data, i);
				Write($"<td bgcolor='$color'>&nbsp;</td>");
			}
			WriteLine("</tr>");
		}

		WriteLine("</table></html></body>");

		html.Text = text.ToString();
	}
}
