using Nemerle.Collections;
using PipelineMacro;
using System.IO;
using System.Linq;

using SCG = System.Collections.Generic;

class GroupShotsTask : ITask
{
	public MapItems(items : list[ITaskItem]) : list[TaskMapping]
	{
		mutable mappings = [];
		foreach (item is JsonItem in items)
			mappings ::= TaskMapping(this, [ item ], [ ShotClusterItem(item.Name) ]);
		mappings;
	}

	private Compute
		( [InItem]  jsonItem    : JsonItem
		, [OutItem] clusterItem : ShotClusterItem
		) : void
	{
		mutable id = 0;
		def UniquePhoto(photo)
		{
		| _ when photo.ShotID == "" =>
			++id;
			JsonIO.PhotoInfo
				( id        = photo.ID
				, rootSrc   = photo.RootSrc
				, shotID    = id + "-unique"
				, ownerID  = photo.OwnerID
				, dateTaken = photo.DateTaken
				)
		| _ => photo
		}
		clusterItem.Clusters = jsonItem.Photos.Select(UniquePhoto).GroupBy(_.ShotID).MapToArray(_.MapToArray(_.ID));
	}
}
