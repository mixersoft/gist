using Nemerle.Collections;
using Nemerle.Utility;
using PipelineMacro;
using System.IO;
using System.Text;

public class CreateDuplicatesHtmlTask : ITask
{
	public MapItems(items : list[ITaskItem]) : list[TaskMapping]
	{
		mutable mappings = [];
		foreach (item is DuplicatesItem in items)
			mappings ::= TaskMapping(this, [ item ], [ DuplicatesHtmlItem(item.Name) ]);
		mappings;
	}

	private Compute
		( [InItem]  duplicates : DuplicatesItem
		, [OutItem] html       : DuplicatesHtmlItem
		) : void
	{
		def GetThumbnailPath(id)
		{
			def folder = duplicates.Name;
			$"../ThumbnailCollection/$folder/$id.jpg"
		}

		def text = StringBuilder();
		def Write    (line) { _ = text.Append(line)     }
		def WriteLine(line) { _ = text.AppendLine(line) }

		WriteLine("<html><body>");

		foreach (group in duplicates.ImageIDs)
		{
			foreach (id in group)
			{
				def thumb = GetThumbnailPath(id);
				Write($"<img src='$thumb' /> ");
			}
			WriteLine("<br>");
		}

		WriteLine("</html></body>");

		html.Text = text.ToString();
	}
}
