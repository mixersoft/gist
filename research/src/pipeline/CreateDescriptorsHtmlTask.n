using Emgu.CV.CvEnum;
using Emgu.CV.Structure;
using Emgu.CV;
using Nemerle.Collections;
using Nemerle.Utility;
using System.IO;
using System.Text;

[ Record ]
class CreateDescriptorsHtmlTask : ITask
{
	private parameters : Parameters;

	public Name : string { get { "CreateDescriptorsHtmlTask" } }

	public MapItems(items : list[ITaskItem]) : list[TaskMapping]
	{
		mutable mappings = [];
		foreach (item is DescriptorItem when item.Path.StartsWith(@"descriptors\") in items)
		{
			def path = Path.Combine
				( "descriptors-html"
				, Path.GetFileNameWithoutExtension(item.Path) + ".html"
				);

			def result = DescriptorsHtmlItem(path);

			mappings ::= TaskMapping
				( inputs  = [ item ]
				, outputs = [ result ]
				, compute = () => Compute(item, result)
				);
		}
		mappings;
	}

	private Compute(descriptors : DescriptorItem, html : DescriptorsHtmlItem) : void
	{
		def GetThumbnailPath(id)
		{
			def folder = Path.GetFileName(descriptors.Path);
			$"../thumbnails/$folder/$id.jpg"
		}
		def GetDominantColor(data)
		{
			def src = Image.[Bgr, float](1, 1);
			src[0, 0] = Bgr
				( red   = data[data.Length - 3] / parameters.ColorWeight
				, green = data[data.Length - 2] / parameters.ColorWeight
				, blue  = data[data.Length - 1] / parameters.ColorWeight
				);

			def dst = Image.[Bgr, float](1, 1);
			CvInvoke.cvCvtColor(src.Ptr, dst.Ptr, COLOR_CONVERSION.CV_Lab2BGR);

			string.Format
				( "#{0:X2}{1:X2}{2:X2}"
				, dst[0, 0].Red   :> int
				, dst[0, 0].Green :> int
				, dst[0, 0].Blue  :> int
				);
		}

		def text = StringBuilder();
		def WriteLine(line) { _ = text.AppendLine(line) }

		[ "<html>"
		, "<head><style type='text/css'>"
		, "	tr td:nth-child(1) { text-align: right }"
		, "	tr td:nth-child(2) { width: 32px }"
		, "</style></head>"
		, "<body><table>"
		].Iter(WriteLine);

		foreach (descriptor in descriptors.Descriptors)
		{
			def thumb = GetThumbnailPath(descriptor.ID);
			def color = GetDominantColor(descriptor.Data);
			WriteLine($"<tr><td><img src='$thumb' /></td><td bgcolor='$color'>&nbsp;</td></tr>");
		}

		WriteLine("</table></html></body>");

		html.Text = text.ToString();
	}
}
