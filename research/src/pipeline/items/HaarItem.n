using Emgu.CV.CvEnum;
using Emgu.CV.Structure;
using Emgu.CV;
using Nemerle.Collections;
using PipelineMacro;
using System.Drawing;
using System.IO;
using System;

/// <summary>
/// This data item holds discrete Haar wavelet transform output.
/// </summary>
[ TaskItemInfo(Directory) ]
public class HaarItem : ITaskItem
{
	public mutable Images : Hashtable[string, Image.[Bgr, byte]];

	public Save(path : string) : void
	{
		DirectoryEx.Recreate(path);
		foreach (pair in Images)
		{
			def (id, image) = (pair.Key, pair.Value);
			image.Save(Path.Combine(path, id + ".jpg"));
		}
	}

	public Load(path : string) : void
	{
		Images = Hashtable();
		foreach (file in Directory.GetFiles(path))
		{
			def id = Path.GetFileNameWithoutExtension(file);
			Images.Add(id, Image.[Bgr, byte](file));
		}
	}
}
