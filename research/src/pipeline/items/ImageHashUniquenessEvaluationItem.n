using PipelineMacro;
using System.IO;

[ TaskItemInfo(File(".txt")) ]
class ImageHashUniquenessEvaluationItem : ITaskItem
{
	public mutable Conflicts           : array[array[string]];
	public mutable MakeImagePathFromID : string -> string;

	public Save(path : string) : void
	{
		_ = Directory.CreateDirectory(Path.GetDirectoryName(path));
		using (writer = File.CreateText(path))
		{
			[ "<html>"
			, "<head><style type='text/css'>"
			, "	.even { background-color : #FFF }"
			, "	.odd  { background-color : #EEE }"
			, "	span { display : block; padding : 8px; }"
			, "</style></head>"
			, "<body>"
			, $"<p>Number of conflicts: $(Conflicts.Length)</p>"
			].Iter(writer.WriteLine);
			foreach (group in Conflicts with i)
			{
				def spanClass = if (i % 2 == 0) "even" else "odd";
				writer.WriteLine($"<span class='$spanClass'>");
				foreach (id in group)
					writer.WriteLine($"<img height='64' src='../$(MakeImagePathFromID(id))'>");
				writer.WriteLine("</span>");
			}
			writer.WriteLine("</body></html>");
		}
	}

	public Load(_ : string) : void
	{
	}
}
