using Nemerle.Collections;
using Nemerle.Utility;
using System.IO.File;

/// <summary>Meta-parameter source that loads from "parameters.txt".</summary>
public class Parameters
{
	public mutable DownloadImagePrefix : string;
	public mutable ImageSize           : int * int;
	public mutable ClusteringThreshold : double;
	public mutable ImageSampleSize     : int;
	public mutable HashedImageQuality  : int;

	public this()
	{
		def ParseSize(str)
		{
			def i = str.IndexOf(',');
			def w = int.Parse(str.Substring(0, i));
			def h = int.Parse(str.Substring(i + 1));
			(w, h);
		}

		def map = Hashtable();
		foreach (line in ReadAllLines("parameters.txt"))
		{
			def i = line.IndexOf('=');
			def name  = line.Substring(0, i).Trim();
			def value = line.Substring(i + 1).Trim();
			map.Add(name, value);
		}

		DownloadImagePrefix = map["download image prefix"];
		ImageSize           = map["image size"]           |> ParseSize;
		ClusteringThreshold = map["clustering threshold"] |> double.Parse;
		ImageSampleSize     = map["image sample size"]    |> int.Parse;
		HashedImageQuality  = map["hashed image quality"] |> int.Parse;
	}
}
