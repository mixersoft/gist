using Nemerle.Imperative;

using SCG = System.Collections.Generic;

public module Extensions
{
	public TypedFilter[T1, T2]
		( this l : SCG.IEnumerable[T1]
		, pred : T2 -> bool
		) : SCG.IEnumerable[T2] where T2 : T1
	{
		foreach (x is T2 when pred(x) in l)
			yield x;
	}

	public TypedFind[T1, T2]
		( this l : SCG.IEnumerable[T1]
		, pred : T2 -> bool
		) : option[T2] where T2 : T1
	{
		foreach (x is T2 when pred(x) in l)
			return Some(x);
		None();
	}
}
