using Nemerle.Collections;
using Nemerle.Utility;
using System.IO;
using System;

class ImageHashConsistencyEvaluationItem : ITaskItem
{
	[ Accessor ] private path : string;

	public mutable Hashes : list[string * list[int]];

	public this(path : string)
	{
		this.path = path;
	}

	public HasCache() : bool
	{
		File.Exists(path);
	}

	public Save() : void
	{
		def Score(hashes)
		{
			def hashes = hashes.ToArray();
			hashes.Fold("", (hash, result) => result + Array.IndexOf(hashes, hash).ToString());
		}
		using (writer = File.CreateText(path))
		{
			foreach ((id, hashes) in Hashes)
				writer.WriteLine("{0}: {1}", id, Score(hashes));
		}
	}

	public Load() : void
	{
	}
}
