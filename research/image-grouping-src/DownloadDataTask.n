using Nemerle.Collections;
using Nemerle.Utility;
using System.IO;
using System.Net;
using System;

[ Record ]
class DownloadDataTask : ITask
{
	private parameters : IParameters;

	public Name : string { get { "DownloadDataTask" } }

	public MapItems(items : list[ITaskItem]) : list[TaskMapping]
	{
		mutable mappings = [];
		foreach (item is JsonItem in items)
		{
			def result = ImageCollectionItem
				(Path.Combine("images", Path.GetFileNameWithoutExtension(item.Path)));
			mappings ::= TaskMapping
				( inputs  = [ item ]
				, outputs = [ result ]
				, compute = () => Compute(item, result)
				);
		}
		mappings;
	}

	private Compute(jsonItem : JsonItem, result : ImageCollectionItem) : void
	{
		def downloadPrefix = "/" + parameters.DownloadImagePrefix;

		def client = WebClient();

		result.ImageIDs = array(jsonItem.Photos.Length);

		_ = Directory.CreateDirectory("images");

		foreach (photo in jsonItem.Photos with i)
		{
			def path = result.MakePath(photo.ID);
			_ = Directory.CreateDirectory(Path.GetDirectoryName(path));
			client.DownloadFile
				( address  = jsonItem.BaseUrl + photo.RootSrc.Replace("/", downloadPrefix)
				, fileName = result.MakePath(photo.ID)
				);
			result.ImageIDs[i] = photo.ID;
		}
	}
}
