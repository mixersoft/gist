using Nemerle.Collections;
using Nemerle.Utility;
using System.IO;
using System.Net;
using System;

class DownloadDataTask : ITask
{
	private downloadPrefix : string;

	public this(downloadPrefix : string)
	{
		this.downloadPrefix = downloadPrefix;
	}

	public MapItems(items : list[ITaskItem]) : list[TaskMapping]
	{
		mutable mappings = [];
		foreach (item is JsonItem in items)
		{
			def path = Path.Combine("images", Path.GetFileNameWithoutExtension(item.Name));

			def result = ImageCollectionItem(path);

			mappings ::= TaskMapping
				( inputs  = [ item ]
				, outputs = [ result ]
				, compute = () => Compute(item, result)
				);
		}
		mappings;
	}

	public Compute(jsonData : JsonItem, result : ImageCollectionItem) : void
	{
		def client = WebClient();

		def downloadPrefix = "/" + downloadPrefix;

		result.ImageIDs = array(jsonData.Photos.Length);

		_ = Directory.CreateDirectory("images");

		foreach (photo in jsonData.Photos with i)
		{
			def path = result.MakePath(photo.ID);
			_ = Directory.CreateDirectory(Path.GetDirectoryName(path));
			client.DownloadFile
				( address  = jsonData.BaseUrl + photo.RootSrc.Replace("/", downloadPrefix)
				, fileName = result.MakePath(photo.ID)
				);
			result.ImageIDs[i] = photo.ID;
		}
	}
}
